name: C/C++ CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install dependencies (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake libssl-dev
    
    - name: Install dependencies (macOS)
      if: runner.os == 'macOS'
      run: |
        brew install cmake openssl
    
    - name: Install dependencies (Windows)
      if: runner.os == 'Windows'
      run: |
        choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System'
        choco install openssl
    
    - name: Configure CMake
      run: |
        mkdir build
        cd build
        cmake ..
    
    - name: Build
      run: |
        cd build
        cmake --build . --config Release
    
    - name: Test (Linux/macOS)
      if: runner.os != 'Windows'
      run: |
        cd build
        ./binanalyzer --version
        ./binanalyzer --help
    
    - name: Test (Windows)
      if: runner.os == 'Windows'
      run: |
        cd build/Release
        ./binanalyzer.exe --version
        ./binanalyzer.exe --help
    
    - name: Upload artifact (Linux/macOS)
      if: runner.os != 'Windows'
      uses: actions/upload-artifact@v3
      with:
        name: binanalyzer-${{ matrix.os }}
        path: build/binanalyzer
    
    - name: Upload artifact (Windows)
      if: runner.os == 'Windows'
      uses: actions/upload-artifact@v3
      with:
        name: binanalyzer-${{ matrix.os }}
        path: build/Release/binanalyzer.exe
